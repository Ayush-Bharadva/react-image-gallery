//useModal
import { useRef, forwardRef } from "react";
import { createPortal } from "react-dom";
import { PropTypes } from "prop-types";

function useModal() {
	const ref = useRef(null);

	function close() {
		ref.current.close();
		ref.current.style.display = "none";
	}

	function open() {
		ref.current.showModal();
		ref.current.style.display = "flex";
	}

	const Modal = forwardRef(function Modal({ children }) {
		const modalNode = document.getElementById("modal");

		return createPortal(
			<dialog ref={ref} className="container-modal">
				{children}
			</dialog>,
			modalNode
		);
	});

	Modal.propTypes = {
		children: PropTypes.oneOfType([
			PropTypes.arrayOf(PropTypes.node),
			PropTypes.node,
		]),
	};

	return [open, close, Modal];
}

export default useModal;
//Modal
import { forwardRef, useImperativeHandle, useRef } from "react";
import { createPortal } from "react-dom";
import { PropTypes } from "prop-types";
import "./Modal.scss";

const Modal = forwardRef(function Modal({ children }, ref) {
	const modalNode = document.getElementById("modal");

	return createPortal(
		<dialog ref={ref} className="container-modal">
			{children}
		</dialog>,
		modalNode
	);
});

export default Modal;

Modal.propTypes = {
	children: PropTypes.oneOfType([
		PropTypes.arrayOf(PropTypes.node),
		PropTypes.node,
	]),
};
//ImageModal
import { useContext, useEffect, useRef, useState } from "react";
import PropTypes from "prop-types";
import "./ImageModal.scss";
import { createPortal } from "react-dom";
import Button from "../../UI/button/Button";
import { ImageContext } from "../../context/ImageProvider";
import { onDownloadImage } from "../../helper/utils";
import { IoBookmarksOutline, IoHeartOutline } from "react-icons/io5";
import { AiTwotoneCheckCircle } from "react-icons/ai";
import { GrLocation } from "react-icons/gr";
import { FiDownload } from "react-icons/fi";
import avatar from "../../assets/images/profile-avatar.jpg";
import SocialShareModal from "./SocialShareModal";
// import ImageDetailsModal from "./ImageDetailsModal";
import { RxCross1 } from "react-icons/rx";
import { FaAngleLeft, FaAngleRight } from "react-icons/fa";
import { SiCanva } from "react-icons/si";
import { CiShare1 } from "react-icons/ci";
import { BsInfoCircle } from "react-icons/bs";
import Modal from "./Modal";
import useMyModal from "../../hooks/useModal";

function ImageModal({ onImageNavigate, onClose }) {
	const [showShareModal, setShowShareModal] = useState(false);
	const [showStatModal, setShowStatModal] = useState(false);
	const [myOpen, myClose, MyModal] = useMyModal();

	const modal = useRef(null);

	const {
		modalImageInfo: { image },
	} = useContext(ImageContext);

	const {
		photographer,
		src: { large: imageUrl },
		alt,
	} = image;

	const openModal = () => {
		myOpen();
	};

	const handleDownload = () => onDownloadImage(imageUrl, alt);
	const onShowMoreInfo = () => setShowShareModal(true);
	const onCloseMoreInfo = () => setShowShareModal(false);

	return createPortal(
		<div className="modal-wrapper">
			<button className="modal-btn modal-close-btn" onClick={onClose}>
				<RxCross1 />
			</button>
			<button
				onClick={() => onImageNavigate(-1)}
				className="modal-btn previous-image-btn"
			>
				<FaAngleLeft />
			</button>
			<button
				onClick={() => onImageNavigate(1)}
				className="modal-btn next-image-btn"
			>
				<FaAngleRight />
			</button>
			<div className="modal-container">
				<div className="modal-info-container">
					<div className="image-info">
						<div className="profile">
							<div className="profile-img">
								<img src={avatar} alt="profile-avatar" />
							</div>
							<div className="profile-name">
								<p>{photographer}</p>
								<p>Follow | Donate</p>
							</div>
						</div>
						<div className="actions">
							<Button type="outlined-button">
								<IoBookmarksOutline className="icon" />
								<span>Collect</span>
							</Button>
							<Button type="outlined-button">
								<IoHeartOutline className="icon" />
								<span>Like</span>
							</Button>
							<Button type="outlined-button">
								<SiCanva className="icon" />
								<span>Edit in Canva</span>
							</Button>
							<Button
								type="filled-button"
								className="download-btn-bg text-white"
								onClick={handleDownload}
							>
								<span className="download-text">
									Free Download
								</span>{" "}
								<FiDownload className="icon" />
							</Button>
						</div>
					</div>
					<div className="image-container">
						<img src={imageUrl} alt={alt} />
					</div>
					<div className="more-info">
						<p className="more-image-info flex-row gap-12">
							<span className="text-center-v">
								<AiTwotoneCheckCircle />
								Free to use
							</span>
							<span className="text-center-v">
								<GrLocation /> NewZealand
							</span>
						</p>
						<div className="buttons">
							<Button type="outlined-button" onClick={openModal}>
								<BsInfoCircle className="icon" />{" "}
								<span>More Info</span>
							</Button>
							<Button
								type="outlined-button"
								onClick={onShowMoreInfo}
							>
								<CiShare1 className="icon" /> <span>Share</span>
							</Button>
						</div>
					</div>
				</div>
			</div>
			{showShareModal ? (
				<SocialShareModal
					onClose={onCloseMoreInfo}
					photographer={photographer}
				/>
			) : null}
			{/* {showStatModal ? ( */}
			<MyModal ref={modal}>
				<div className="image-details-modal-container">
					<div className="top-container">
						<div className="top-container-header flex-row-center">
							<div className="image-container">
								<img src={imageUrl} alt="" />
							</div>
							<div className="top-heading">
								<h1>Photo details</h1>
								<p>Uploaded on December 16th, 2023</p>
							</div>
						</div>
						<div className="statistics">
							<div>
								<p>Views</p>
								<p>4.8K</p>
							</div>
							<div>
								<p>Likes</p>
								<p>258</p>
							</div>
							<div>
								<p>Downloads</p>
								<p>2.4K</p>
							</div>
						</div>
					</div>
					<div className="bottom-container">
						<button className="close-btn" onClick={myClose}>
							<RxCross1 />
						</button>
						<div className="stat-info">
							<p>Dimensions</p>
							<p>3718 x 5577</p>
						</div>
						<div className="stat-info">
							<p>Aspect Ratio</p>
							<p>2:3</p>
						</div>
						<div className="stat-info">
							<p>Camera</p>
							<p>ILCE-7C</p>
						</div>
						<div className="stat-info">
							<p>Focal</p>
							<p>35.0mm</p>
						</div>
						<div className="stat-info">
							<p>Aperture</p>
							<p>f/4.0</p>
						</div>
						<div className="stat-info">
							<p>ISO</p>
							<p>100</p>
						</div>
						<div className="stat-info">
							<p>Shutter Speed</p>
							<p>0.002s</p>
						</div>
						<div className="stat-info">
							<p>Taken At</p>
							<p>Aug 13, 2023</p>
						</div>
					</div>
				</div>
			</MyModal>
			{/* ) : null} */}
		</div>,
		document.getElementById("image-portal")
	);
}

ImageModal.propTypes = {
	onImageNavigate: PropTypes.func.isRequired,
	onClose: PropTypes.func.isRequired,
};
export default ImageModal;
